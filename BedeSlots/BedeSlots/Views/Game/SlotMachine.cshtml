@model GameSlotViewModel
@inject IJsonHelper Json

@{
    ViewData["Title"] = "SmallSlotMachine";
}

<h2 class="text-center">SlotMachine</h2>

<div id="status-msg">
    <partial name="_StatusMessage" model="@Model.StatusMessage" />
</div>

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <div id="partial">
            <partial name="_GameSlotPartial" model="@Model" />
        </div>

        <form id="spin-form" method="post" asp-controller="Game" asp-action="Spin">
            <div class="form-group col-md-6 col-md-offset-3">
                <label asp-for="@Model.Stake" class="control-label text-info"></label>
                <input asp-for="@Model.Stake" id="stake" type="number" min="1" class="form-control" />
                <span asp-validation-for="@Model.Stake" class="text-danger"></span>

                <input asp-for="@Model.Rows" id="rows" hidden />
                <input asp-for="@Model.Cols" id="cols" hidden />
            </div>
            <button type="button" id="spin-button" class="btn btn-success btn-block">Spin</button>
        </form>
    </div>
</div>

<audio id="spin-audio" src="/audio/snip.mp3"></audio>
<audio id="lose" src="/audio/lose.mp3"></audio>
<audio id="win-audio" src="~/audio/win.mp3"></audio>

@section Scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="~/js/game.js"></script>

    <script>
        let MyAppUrlSettings = {
            GameSpinUrl: '@Url.Action("Spin","Game")',
            UserBalanceComponent: '@Url.Action("BalanceViewComponent", "UserBalance")'
        }
    </script>
}